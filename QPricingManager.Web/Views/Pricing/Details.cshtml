@model QPricingManager.Core.Entities.Pricing

@{
    ViewBag.Title = "Details";
}

<div class="col-sm-12" id="pricingtable">
    <div id="ajaxForm" class="panel panel-primary panel-no-borders">
        <div class="panel-heading">Pricing</div>
        <table class="table table-striped table-bordered">
            <input id="PricingId" name="PricingId" type="hidden" value="@Model.Id">
            <tr>
                <td></td>
                @foreach (var tier in Model.PricingTiers)
            {
                    <td align="center">
                        <div class="pricingDetails_planHeader pricingDetails_plan">
                            <div class="pricingDetails_planTitle">@Html.DisplayFor(modelItem => tier.Name)</div>
                            <div> Tekst i opis usluge </div>
                            <div class="pricingDetails_planPrice">Cijena 10E</div>
                        </div>
                    </td>
                }
            </tr>
            @foreach (var group in Model.PricingGroups)
            {
                <tr>
                    <td style="font-size:20px" class="pricingGroups">
                        @Html.DisplayFor(modelItem => group.Name)
                    </td>
                </tr>
                foreach (var item in group.PricingItems)
                {
                    <tr>
                        <td>
                            <a data-toggle="popover" data-trigger="hover" title="@item.Name" data-content="@item.Description">@Html.DisplayFor(modelItem => item.Name)</a>

                            @foreach (var unit in item.PricingUnits)
                    {
                            <td align="center">
    
                                @switch (unit.PricingUnitType)
                                {
                                    case QPricingManager.Core.Entities.PricingUnitType.Text:
                                        @Html.DisplayFor(modelUnit => unit.Text);
                                        break;

                                    case QPricingManager.Core.Entities.PricingUnitType.Calculation:
                                        @Html.TextBox("multiplier-" + unit.Id ,unit.Multiplier, new { @class = "multiplier" });<text>&nbsp;</text>
                                        @Html.Label("X");<text>&nbsp;</text>
                                        @Html.TextBoxFor(modelUnit => unit.Price, new { @class = "price", @readonly = "readonly", @disabled = "disabled" });<text>&nbsp;</text>
                                        @Html.Label("=");<text>&nbsp;</text>
                                        @Html.TextBox("UnitSum-" + unit.Id, unit.Price * unit.Multiplier, new { @class = "sum", @readonly = "readonly", @disabled = "disabled" });
                                        break;
                                    default:
                                        switch (unit.IsIncluded)
                                        {
                                            case true:
                                                <span class="glyphicon glyphicon-ok"></span>
                                                break;
                                            default:
                                                <span class="glyphicon glyphicon-remove"></span>
                                                break;
                                        }
                                        break;
                                }
                            </td>
                            }
                        </tr>
                }
            }
        </table>
        <div class="panel-footer">
            <a class="btn btn-default" href="@Url.Action("Index", "Pricing")"><i class="glyphicon glyphicon-list"></i><span>&nbsp;Back to list</span></a>
            <a class="btn btn-default" href="@Url.Action("Edit", new { id = Model.Id })"><span>Edit</span></a>
            <a class="btn btn-default" href="@Url.Action("PricingExcelExport", new { id = Model.Id })"><i class="glyphicon glyphicon-list-alt"></i><span>&nbsp;Download Excel</span></a>
            <input type="button" id="pdfbutton" onclick="postPdf();" value="Preuzmi pdf" style="cursor:pointer;" class="btn btn-default">
            <a class="btn btn-default create-new-offer"><span>Create new offer</span></a>
        </div>
        <table class="table table-striped table-bordered">
            <tr>
                <td>
                    @Html.Label("Create new Offer")
                </td>
                <td>
                    @Html.Label("Offer Name")
                    @Html.TextBox("Offer Name")
                </td>
                <td>
                    @Html.Label("Offer Description")
                    @Html.TextBox("Offer Description")
                </td>
                <td>
                    @Html.Label("Offer For")
                    @Html.TextBox("Offer For")
                </td>
                <td>
                    @Html.Label("Offer For Address")
                    @Html.TextBox("Offer For Address")
                </td>
            </tr>           
        </table>
        
    </div>
</div>

@using (Html.BeginForm("GetPdf", "Pricing", new { id = Model.Id }, FormMethod.Post, new { id = "pdfForm" }))
{
    <input type="hidden" id="pdfHtmlInput" name="tableHtml" value="" />
    <input type="hidden" name="type" value="pricing" />
}


<script type="text/javascript">
    $(document).ready(function () {
        $('[data-toggle="popover"]').popover();
    });

    $(document).ready(function () {
        $(".multiplier").change(function (e) {
            $(e.target.parentElement).find(".sum")[0].value = $(e.target.parentElement).find(".price")[0].value * $(e.target).val().replace(",", ".");
        });
    });

    $(".create-new-offer").click(function () {
        var url = '@Url.Action("CreateFromPricing", "Offer")';
        $.ajax({
            url: url,
            type: "POST",
            data: $("#ajaxForm").find("input").serialize()
        });
    });

    function postPdf() {
        var table = $("#pricingtable").prop('outerHTML');
        $("#pdfHtmlInput").val(table);
        $("#pdfForm").submit();
    }
</script>

